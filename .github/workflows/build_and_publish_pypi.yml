# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  build-python3-10:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install -r requirements.txt
        pip install poetry
        echo $HOME
    - name: Build package
      id: build
      run: poetry build
    - name: TOML Reader
      if: ${{ steps.build.outcome }} == "success"
      uses: SebRollen/toml-action@v1.0.2
      id: read_toml
      with:
        file: "pyproject.toml"
        field: "tool.poetry.version"
    - name: upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: notpy-artifact
        path: ./dist/
        retention-days: 1


  publish-artifact:
    needs: build-python3-10
    runs-on: ubuntu-latest
    steps: 
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: notpy-artifact
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}    
